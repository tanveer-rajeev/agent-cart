version: '3.9'

services:
  # ========================
  # Infrastructure Services
  # ========================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # ========================
  # Databases (one per service)
  # ========================
  postgres-auth:
    image: postgres:15
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
      POSTGRES_DB: auth_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data

  postgres-product:
    image: postgres:15
    environment:
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: product_pass
      POSTGRES_DB: product_db
    ports:
      - "5434:5432"
    volumes:
      - postgres_product_data:/var/lib/postgresql/data

  postgres-inventory:
    image: postgres:15
    environment:
      POSTGRES_USER: inventory_user
      POSTGRES_PASSWORD: inventory_pass
      POSTGRES_DB: inventory_db
    ports:
      - "5435:5432"
    volumes:
      - postgres_inventory_data:/var/lib/postgresql/data

  postgres-order:
    image: postgres:15
    environment:
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_pass
      POSTGRES_DB: order_db
    ports:
      - "5436:5432"
    volumes:
      - postgres_order_data:/var/lib/postgresql/data

  # ========================
  # Microservices
  # ========================
  service-registry:
    build: ./service-registry
    ports:
      - "8761:8761"

  config-server:
    build: ./config-server
    ports:
      - "8888:8888"
    depends_on:
      - service-registry

  api-gateway:
    build: ./api-gateway
    ports:
      - "8989:8989"
    depends_on:
      - service-registry
      - config-server

  auth-service:
    build: ./auth-service
    ports:
      - "9090:9090"
    depends_on:
      - postgres-auth
      - kafka
      - service-registry
      - config-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-auth:5432/auth_db
      SPRING_DATASOURCE_USERNAME: auth_user
      SPRING_DATASOURCE_PASSWORD: auth_pass

  product-service:
    build: ./product-service
    ports:
      - "9091:9091"
    depends_on:
      - postgres-product
      - kafka
      - service-registry
      - config-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-product:5432/product_db
      SPRING_DATASOURCE_USERNAME: product_user
      SPRING_DATASOURCE_PASSWORD: product_pass

  inventory-service:
    build: ./inventory-service
    ports:
      - "9093:9093"
    depends_on:
      - postgres-inventory
      - kafka
      - service-registry
      - config-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-inventory:5432/inventory_db
      SPRING_DATASOURCE_USERNAME: inventory_user
      SPRING_DATASOURCE_PASSWORD: inventory_pass

  order-service:
    build: ./order-service
    ports:
      - "9094:9094"
    depends_on:
      - postgres-order
      - kafka
      - service-registry
      - config-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/order_db
      SPRING_DATASOURCE_USERNAME: order_user
      SPRING_DATASOURCE_PASSWORD: order_pass

volumes:
  postgres_auth_data:
  postgres_product_data:
  postgres_inventory_data:
  postgres_order_data:
